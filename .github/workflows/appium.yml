name: Appium CI
# on push we will trigger our code
on: [push]
env:

  ANDROID_ARCH: x86
  ANDROID_TARGET: google_apis
  API_LEVEL: 29
  ANDROID_BUILD_TOOLS_VERSION: 34.0.0
  ANDROID_SDK_PACKAGES: system-images;android-29;google_apis;x86
  EMULATOR_TIMEOUT: 550
  EMULATOR_NAME: test API 29
jobs:
  build:
    runs-on: macos-latest
    strategy: # we are using strategy if we need to run on parallel with different devices and version
     matrix:
       api-level: [29] #29
       target: [google_apis]
    steps:
    - uses: actions/checkout@v3 #checkout the code 
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'oracle'
      
    - name: Set up Node JS 18.16.1
      uses: actions/setup-node@v3
      with:
        node-version: '18.16.1'
        
    - name: Android emulator
      uses: actions/checkout@v3
        
    - name: Add avdmanager and sdkmanager to system PATH
      run: |
            echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/${{ env.ANDROID_BUILD_TOOLS_VERSION }}" >> $GITHUB_PATH

    - name: Install Sdk
      run: |
           yes Y | sdkmanager --licenses
           sdkmanager --install ${ANDROID_SDK_PACKAGES}
  
    - name: Build emulator
      run: |
       echo "no" |/Users/runner/Library/Android/sdk/cmdline-tools/latest/bin/avdmanager --verbose create avd --force --name "test_API_29" --package "system-images;android-29;google_apis;x86" --tag "google_apis" --abi "x86" --device "test_API_29"

    - name: Launch emulator
      run: |
          chmod +x ./scripts/start-emulator.sh
          EMULATOR_TIMEOUT=$EMULATOR_TIMEOUT EMULATOR_NAME=$EMULATOR_NAME ./scripts/start-emulator.sh
   
    - name: Install the Emulator
      run: |
         chmod +x ./scripts/RunAppiumServer.sh
         ./scripts/RunAppiumServer.sh  
         
    - name: Run Appium Tests
      run: |
          mvn test
 
       
  
